% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protein3d.R
\name{translateRangesToColors}
\alias{translateRangesToColors}
\title{translateRangesToColors}
\usage{
translateRangesToColors(ranges, proteinData, outsideColor)
}
\arguments{
\item{ranges}{data.frame with 4 columns: 'rangeValues', 'insideColor', 'inbetween'
(similair in use to in \code{\link{translateRangeToColors}}) & 'columnName' which determines
from which column, in the protein data data.frame, values should be taken to determine the
colors. Note: that there can be colors in the earlier rows of this data.frame will be
overwritten if needed by colors in later rows if needed}

\item{proteinData}{a proteinData data.frame with at least the columns specified in the ranges
data.frame}

\item{outsideColor}{color to apply to any row in the proteinData that falls outside any of the
ranges}
}
\value{
a vector of colors with the same length as the number of rows in the protein data
}
\description{
more advanced function that takes a data.frame of information and a protein data
data.frame and generates colors matching the instructions in the information data.frame applied
to the protein data.frame. This allows for more complicated coloring schemes
}
\examples{
# create protein data
ovaProtein <- proteinCoverage(sequence = standardProtein(),
 peptideTable = OVATable("peptide"), Accession = "P01012",
 positionColumn = "PositionsinProteins", shiftPosition = 1)
# create ranges data.frame
dfColors <- data.frame(rangeValues = NA,
insideColors = c("#0053D6", "#65CBF3", "#FFDB13", "#FF7D45"),
columnName = "position", inbetween = FALSE)
dfColors$rangeValues <- list(c(1:10), c(11:20), c(21:30), c(31:40))
dfColors
translateRangesToColors(ranges = dfColors, proteinData = ovaProtein,
 outsideColor = "white")[1:45]
# create ranges data.frame
dfColors <- data.frame(rangeValues = NA,
insideColors = c("#0053D6", "#65CBF3", "#FFDB13", "#FF7D45"),
columnName = "sequence", inbetween = FALSE)
dfColors$rangeValues <- list(c("A","C","D"), c("E","F"), c("G","H"), c("K","L"))
dfColors
translateRangesToColors(ranges = dfColors, proteinData = ovaProtein,
 outsideColor = "white")[1:45]
}
