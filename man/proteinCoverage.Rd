% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteinInfo.R
\name{proteinCoverage}
\alias{proteinCoverage}
\title{proteinCoverage}
\usage{
proteinCoverage(
  proteinTableRow = NA,
  checkSequenceLength = TRUE,
  noWarnings = FALSE,
  prepareColumns = NA,
  prepareRows = NA,
  emptySequence = "",
  noCoverage = 0,
  coverage = 1,
  sequence = NA,
  start = 1,
  end = ifelse(is.na(sequence), 1, nchar(sequence)),
  nterm = NA,
  cterm = NA,
  peptideTable,
  Accession,
  positionColumn
)
}
\arguments{
\item{proteinTableRow}{data.frame row that has at least a Sequence column with the whole protein amino acid sequence and a
SequenceCoverage column specifying the coverage. The SequenceCoverage needs to be in format: 'full sequence length';'start-end 1st part';'start-end 2nd part'; etc etc
The start-end parts together specify which parts of the protein have been sequenced (coverage). Note: the positions SequenceCoverage field in the proteinTableow are
zero based: the first amino acid position is zero, not one! This behavior is consistent with protein tables as used by Proteome Discoverer and can be changed by
the proteinTableRowZero argument.}

\item{checkSequenceLength}{logical vector: default is TRUE, defined for odd situations where there may be malformed SequenceCoverage fields. Might be removed in future versions}

\item{noWarnings}{logical vector: default is FALSE. If the check for the sequence length fails, it will generate a warning. If TRUE then no warning is generated. Might be removed in future versions}

\item{prepareColumns}{defines the number of columns for a 2D matrix (puts the amino acid letters in a rows*columns matrix)}

\item{prepareRows}{defines the number of rows for a 2D matrix (puts the amino acid letters in a rows*columns matrix)}

\item{emptySequence}{default "-", character vector for the sequence column to use when adding rows. Note: other columns will also be
extended and usually add NA's as a value. Ignored when proteinTableRow is not NA.}

\item{noCoverage}{defines what to use when a position is not 'covered'. Can be a number, logical or character. It will be changed into
a character vector at the end of the function. Default is 0 (integer)}

\item{coverage}{defines what to use when a position is 'covered'. Can be a number, logical or character. It will be changed into
a character vector at the end of the function. Default is 1 (integer)}

\item{sequence}{character vector, protein sequence in the form of the usual letter codes.
Ignored when proteinTableRow is not NA.}

\item{start}{first position in the sequence to be used. Ignored when proteinTableRow is not NA.}

\item{end}{last position in the sequence to be used. Ignored when proteinTableRow is not NA.}

\item{nterm}{start position 'adjustment'. Adds a number of 'empty' rows to the head of the resulting data.frame to have it start at position nterm.
Ignored when proteinTableRow is not NA.}

\item{cterm}{end position 'adjustment'. Adds a number of 'empty' rows to the tail of the resulting data.frame to have it ends at position cterm}

\item{peptideTable}{data.frame containing the peptide information to be mapped to the sequence. Sholud contain either a column named 'PositionsinProteins'
or 'PositionsinMasterProteins'. This column should be character vectors of one or more of following element: \if{html}{\out{<Accession>}} [start:end];
Ignored when proteinTableRow is not NA.}

\item{Accession}{character vector that specifies from which protein Accession to get the position. This is needed for when using the peptideTable as
a peptide may be present in more than one protein. Ignored when proteinTableRow is not NA.}

\item{positionColumn}{character vector which specifies which column contains the peptide position information. Proteome Discoverer uses either
'PositionsinProteins' or 'PositionsinMasterProteins' (depending on the settings used in the consensus method)}
}
\value{
data.frame with same format as output by \code{\link{createProteinData}} or \code{\link{boxData}} with the 'coverage' column added. The values
in the coverage column are either 0 (no coverage) or 1 (coverage)
}
\description{
Create a protein data.frame with basic information: position, sequence & coverage. In the resulting data.frame, every row
has an amino acid (letter, sequence column), the position of that amino acid in the protein (position column) and a coverage
column where 0 is no coverage and 1 is coverage.

The function can work with a protein table row (as in Proteome Discoverer results), which should contain the Sequence and
the SequenceCoverage columns. An alternative is using a sequence character vector containing a protein amino acid sequence
and a peptide table (as in Proteome Discoverer results) of that same sequence (protein).
}
\note{
it is possible to use both prepareColumns and prepareRows at the same time, but this may lead to errors and unexpected results.
It is therefore not recommended to do so.
}
\examples{
proteinCoverage(OVATable())
proteinCoverage(OVATable(), prepareColumns = 50)
proteinCoverage(OVATable()) |> boxData(ncols = 50)
proteinCoverage(sequence = substr(standardProtein(), 2, 386), peptideTable = OVATable("peptide"),
 Accession = "P01012", positionColumn = "PositionsinProteins")
}
