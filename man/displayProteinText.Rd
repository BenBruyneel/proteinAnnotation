% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{displayProteinText}
\alias{displayProteinText}
\title{displayProteinText}
\usage{
displayProteinText(
  proteinData,
  columns = NA,
  emptySequence = "",
  textColorColumn = NA,
  textColors = NA,
  textBackgroundColorColumn = NA,
  textBackgroundColors = NA,
  HTMLoutput = FALSE,
  linebreakChar = ifelse(HTMLoutput, "<br>", "\\n"),
  returnText = FALSE
)
}
\arguments{
\item{proteinData}{the protein data data.frame}

\item{columns}{numeric vector that specifies the width (in characters) of the protein data display}

\item{emptySequence}{character vector that specifies which value is used for empty pieces of sequence at the beginning or the end of the protein data.frame
please note that these rows, with this in the sequence column, at the beginning of the data.frame are removed for display. The first non-'emptySequence' row
will be the first part displayed (see also examples). If this argument is not the same as the 'emptySequence' argument used in eg \code{\link{proteinCoverage}},
an error will be generated}

\item{textColorColumn}{character vector: name of the column in the proteinData data.frame that contains info for the color of the text
in the 'tiles'. Note: this should not be continuous data}

\item{textColors}{vector withthe text colors to use. Note: the number required is defined by the number of 'discrete' values in the textColor
column of the protein data}

\item{textBackgroundColorColumn}{character vector: name of the column in the proteinData data.frame that contains info for the backcolor of the text
in the 'tiles'. Note: this should not be continuous data}

\item{textBackgroundColors}{vector with the text background colors to use. Note: the number required is defined by the number of 'discrete' values in the
textBackground color column of the protein data}

\item{HTMLoutput}{logical value. Default is FALSE, if TRUE then the output will be a character vector formatted for display in an HTML environment}

\item{linebreakChar}{character vector that is used to split the resulting character vector. For console text this is '\\n', for HTML output it's '< br >'.
Can be adjusted to eg '< hr >' for HTML output}

\item{returnText}{default is FALSE. If no textColor and no textBackgroundColor columns are defined, then setting this to TRUE can be used to retrieve
the result w/o printing it to the screen (it will contain line breaks)}
}
\value{
character vector
}
\description{
displays the protein data in a data frame as text (for console use) or HTML (for use with gt table package). Obviously more
limited than the 'displayProtein' function
}
\note{
colors for display in the console are limited. Only the ones defined by the package 'crayon' should be used. For HTML use there's (obviously) more freedom
}
\examples{
newTable <- proteinCoverage(sequence = standardProtein("OVA"), start = 2, nterm = 1,
 peptideTable = OVATable("peptide"), Accession = "P01012",
 positionColumn = "PositionsinProteins", emptySequence = " ")
trypticSites <- getPeptideStart(proteinSequence = standardProtein("OVA"),
 peptideSequence = "(?<!P)R|(?<!P)K")
trypticSites <- data.frame(position = trypticSites, data = 1)
trypticSites
newTable <- addDataToProtein(proteinDF = newTable, dataframe = trypticSites, dataColumn = "data",
 dataName = "trypticSite", NAValue = 0)
newTable[46:55,]
# print to console
# displayProteinText(proteinData = newTable, columns = 75,
#  textColorColumn = "coverage", textColors = c("white","red"), emptySequence = " ")
# displayProteinText(proteinData = newTable, columns = 75, textColorColumn = "coverage",
#  textColors = c("white","red"), textBackgroundColorColumn = "trypticSite",
#  textBackgroundColors = c("black","yellow"), emptySequence = " ")
# HTML output via gt package
withTryptic <- displayProteinText(proteinData = newTable, columns = 75,
 textColorColumn = "coverage", textColors = c("black","red"),
 textBackgroundColorColumn = "trypticSite", textBackgroundColors = c("white","yellow"),
 emptySequence = " ", HTMLoutput = TRUE)
withoutTryptic <- displayProteinText(proteinData = newTable, columns = 75,
 textColorColumn = "coverage", textColors = c("black","red"), emptySequence = " ",
 HTMLoutput = TRUE)
different <- displayProteinText(proteinData = newTable, columns = 75,
 textColorColumn = "coverage", textColors = c("blue","green"), emptySequence = " ",
 HTMLoutput = TRUE, linebreakChar = "<hr>")
library(gt)
data.frame(Description = c("Coverage without tryptic sites", "Coverage with tryptic sites",
 "A different display..."), Sequence = c(withoutTryptic, withTryptic, different)) |>
  gt::gt() |>
  gt::fmt_markdown(columns = Sequence) |>
  gt::tab_style(
    style = list(
      gt::cell_text(font = "courier")
    ),
    locations = gt::cells_body(
      columns = "Sequence"
    )
  )
}
