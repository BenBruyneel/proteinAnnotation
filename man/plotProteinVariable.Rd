% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{plotProteinVariable}
\alias{plotProteinVariable}
\title{plotProteinVariable}
\usage{
plotProteinVariable(
  proteinDF,
  column,
  positionColumn = "position",
  addSequence = FALSE,
  sequenceColumn = "sequence",
  sequenceLevel = NA,
  textColor = "black",
  textSize = 2,
  textAlpha = 1,
  textNudgeX = 0,
  textNudgeY = 0,
  textAngle = 0,
  textFontFace = "plain",
  lineColor = "red",
  lineWidth = 0.25,
  lineType = "solid",
  lineAlpha = 1,
  drawYzero = FALSE,
  zeroColor = "blue",
  zeroWidth = 0.5,
  zeroType = "solid",
  zeroAlpha = 0.5,
  yLimits = "auto",
  yLog = FALSE,
  ylogSetValue = 1,
  incrY = ifelse(yLog, 0.5, 0.025),
  decrY = 0,
  xLimits = "auto",
  xLabel = positionColumn,
  yLabel = column,
  xLabelFormat = ggplot2::waiver(),
  yLabelFormat = ggplot2::waiver(),
  title = ggplot2::waiver(),
  subtitle = ggplot2::waiver(),
  caption = ggplot2::waiver(),
  setTheme = theme_minimal_adapted()
)
}
\arguments{
\item{proteinDF}{the protein data data.frame. Obligatory columns are 'position' and 'sequence' (in case this needs to be displayed)}

\item{column}{character vector: name(s) of the data column(s) that need to be displayed}

\item{positionColumn}{name of the position column in the protein data  which has the position info (default is 'position')}

\item{addSequence}{logical vector (default FALSE). If TRUE, then the info in the argument 'sequenceColumn' is displayed in the plot}

\item{sequenceColumn}{name of the column containing the sequence info, usually the amino acid sequence, tough it can be something else}

\item{sequenceLevel}{defines where to display the 'sequenceColumn' info. Default is NA (ignored): sequence is displayed at the height (y-axis) of the line plot itself.
Possible other values: 'min' (display at minimum y-value), 'max' (display at maximum y-value) or a numeric value (display at exactly this y-value)}

\item{textColor}{color of the sequence information displayed}

\item{textSize}{size of the sequence information displayed}

\item{textAlpha}{alpha of the sequence information displayed}

\item{textNudgeX}{offset (x-axis direction) of the sequence information displayed}

\item{textNudgeY}{offset (y-axis direction) of the sequence information displayed}

\item{textAngle}{number of degrees to rotate the sequence information displayed, default is 0}

\item{textFontFace}{allows manipulation of the text font used. Default is 'plain'. Alternatives are "bold", "italic", & "bold.italic"}

\item{lineColor}{specifies color of the line}

\item{lineWidth}{specifies width of the line}

\item{lineType}{specifies linetype of the line}

\item{lineAlpha}{specifies alpha of the line}

\item{drawYzero}{logical vector. If TRUE then a horizontal line a y = 0 is drawn/  (default is FALSE)}

\item{zeroColor}{specifies color of the y=0 line}

\item{zeroWidth}{specifies width of the y=0 line}

\item{zeroType}{specifies linetype of the y=0 line}

\item{zeroAlpha}{specifies alpha of the y=0 line}

\item{yLimits}{range of the y-axis, normally yLimits = c(minimum, maximum) or 'auto' for automatic (default)}

\item{yLog}{if TRUE then automatic transformation of the y-axis to logarihmic scale (default is FALSE)}

\item{ylogSetValue}{in case yLog is numeric, then this value allows any y-value equal to zero or below zero to be set to this value.
Default is 1. Can be set to FALSE: no change of any value}

\item{incrY}{increases the upper limit of the  y-axis by 100*incrY percent. Only works if yLimits is set to 'auto'}

\item{decrY}{decreases the lower limit of the  y-axis by 100*decrY percent. Only works if yLimits is set to 'auto'}

\item{xLimits}{range of the x-axis, normally xLimits = c(minimum, maximum) or 'auto' for automatic (default)}

\item{xLabel}{sets x-axis title}

\item{yLabel}{set y-axos title}

\item{xLabelFormat}{defines the numeric format to be used for the x-axis
labels (see BBPersonalR::fromatDigits() & BBPersonalR::formatScientificDigits() for examples)}

\item{yLabelFormat}{defines the numeric format to be used for the y-axis
labels (see BBPersonalR::fromatDigits() & BBPersonalR::formatScientificDigits() for examples)}

\item{title}{specifies the title}

\item{subtitle}{specifies the subtitle}

\item{caption}{specifies the caption}

\item{setTheme}{specifies the theme see also \code{\link{ggplot2}{theme}}. Default is \code{\link{theme_minimal_adapted}}.
If set to NA then no theme us used.}
}
\value{
a ggplot object
}
\description{
creates a line plot of protein data with the amino acid position on the x-axis
}
\examples{
newTable <- proteinCoverage(sequence = standardProtein("OVA"), start = 2, nterm = 1,
 peptideTable = OVATable("peptide"), Accession = "P01012",
 positionColumn = "PositionsinProteins", emptySequence = " ")
trypticSites <- getPeptideStart(proteinSequence = standardProtein("OVA"),
 peptideSequence = "(?<!P)R|(?<!P)K")
trypticSites <- data.frame(position = trypticSites, data = 1)
trypticSites |> head()
newTable <- addDataToProtein(proteinDF = newTable, dataframe = trypticSites,
 dataColumn = "data", dataName = "trypticSite", NAValue = 0)
newTable <- mapPeptidesToProtein(proteinDF = newTable, peptideTable = OVATable("peptide"),
 Accession = "P01012", positionColumn = "PositionsinProteins",
 variable = "XCorrbySearchEngine_1", combineFunction = max)
newTable <- mapPeptidesToProtein(proteinDF = newTable, peptideTable = OVATable("peptide"),
 Accession = "P01012", positionColumn = "PositionsinProteins", variable = "Abundances_1")
newTable <- mapPeptidesToProtein(proteinDF = newTable, peptideTable = OVATable("peptide"),
 Accession = "P01012", positionColumn = "PositionsinProteins", variable = "Abundances_2")
newTable[41:50,]
plotProteinVariable(proteinDF = newTable, column = "XCorrbySearchEngine_1",
 yLabel = "Score")
plotProteinVariable(proteinDF = newTable, column = "XCorrbySearchEngine_1",
 yLabel = "Score", addSequence = TRUE)
plotProteinVariable(proteinDF = newTable, column = "XCorrbySearchEngine_1",
 yLabel = "Score", addSequence = TRUE, textColor = "blue", xLimits = c(51,100),
 yLimits = c(-0.1, 11.1))
plotProteinVariable(proteinDF = newTable, column = "XCorrbySearchEngine_1", yLabel = "Score",
 addSequence = TRUE,  textColor = "blue", sequenceLevel = "min", xLimits = c(51,100),
  yLimits = c(-0.1, 11.1))
plotProteinVariable(proteinDF = newTable, column = "XCorrbySearchEngine_1",
 yLabel = "Score", addSequence = TRUE,  textColor = "blue", sequenceLevel = 5,
 xLimits = c(51,100), yLimits = c(-0.1, 11.1))
plotProteinVariable(proteinDF = newTable, column = "Abundances_1", yLabel = "Abundance")
plotProteinVariable(proteinDF = newTable, column = "Abundances_1", yLabel = "Abundance",
 yLog = TRUE, ylogSetValue = FALSE, yLimits = c(1E3, 2E10), drawYzero = TRUE,
 zeroType = "dotted", zeroAlpha = 0.5)
plotProteinVariable(proteinDF = newTable, column = "Abundances_1",
 yLabel = "Abundance", yLog = TRUE, ylogSetValue = 1E4, yLimits = c(1E3, 2E10),
 drawYzero = TRUE, zeroType = "dotted", zeroAlpha = 0.5)
plotProteinVariable(proteinDF = newTable, column = c("Abundances_1", "Abundances_2"),
 lineColor = c("blue", "red"), yLabel = "Abundance", yLog = TRUE, ylogSetValue = 1E4,
 yLimits = c(1E3, 2E10), drawYzero = TRUE, zeroType = "dotted", zeroAlpha = 0.5)
}
