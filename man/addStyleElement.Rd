% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protein3d.R
\name{addStyleElement}
\alias{addStyleElement}
\title{addStyleElement}
\usage{
addStyleElement(
  object3D,
  proteinDF,
  positionColumn = "position",
  colorColumn,
  colorsReduce = T,
  style = r3dmol::m_style_cartoon,
  ...
)
}
\arguments{
\item{object3D}{a r3dmol object of a protein information file (pdf, cif)}

\item{proteinDF}{protein data data.frame with at least two columns: position & color}

\item{positionColumn}{name of the column containing the positions to be colored (default: 'position')}

\item{colorColumn}{name of the column containing the colors to be used for the positions}

\item{colorsReduce}{this allows for a smaller number of style objects to be added to the
object3D}

\item{style}{function that defines the style to be 'added' to the object3D object (default:
\code{\link{m_style_cartoon}})}

\item{...}{for adding sdditional argunebts to the style-function. For 'm_style_cartoon', e.g.
\code{arrows = FALSE} can be used.}
}
\value{
a r3dmol object
}
\description{
takes a 3d object of the class 'r3dmol' as created via the 'r3dmol' library amd
adds the colors as defined in the protein data. The function \code{\link{m_add_style}} is used
for this.
}
\examples{
# create protein data
ovaProtein <- proteinCoverage(sequence = standardProtein(),
 peptideTable = OVATable("peptide"), Accession = "P01012",
 positionColumn = "PositionsinProteins", shiftPosition = 1)
# mapping Abundance information
ovaProtein <- mapPeptidesToProtein(proteinDF = ovaProtein, peptideTable = OVATable("peptide"),
 Accession = "P01012", positionColumn = "PositionsinProteins",
 shiftPosition = 1L, variable = "Abundances_1",
 dataName = "Abundance", combineFunction = sum)
# translate the colors
logColors <- translateToGradientColors(minValue = 1E3,
 maxValue = max(ovaProtein$Abundance),
 colorSteps = 1000, colors = c("white", "blue"), transformFunction = log10)
ovaProtein$AbundanceLogColors <- logColors(ovaProtein$Abundance)
library(r3dmol)
# get pdb file from alphafold
downloadedFile <- tempfile(fileext = ".pdb")
download.file("https://alphafold.ebi.ac.uk/files/AF-P01012-F1-model_v4.pdb",
 destfile = downloadedFile)
# create r3dmol object
\dontrun{
p3d <- r3dmol(viewer_spec = m_viewer_spec(
  cartoonQuality = 20,
  lowerZoomLimit = 50,
  upperZoomLimit = 350
)) \%>\%
  m_add_model(downloadedFile) \%>\%
  m_set_style(style = m_style_cartoon(arrows = F)) \%>\%
  m_zoom_to()
p3d
# add colors
addStyleElement(p3d, proteinDF = ovaProtein, colorColumn = "AbundanceColors", arrows = FALSE)
addStyleElement(p3d, proteinDF = ovaProtein, colorColumn = "AbundanceLogColors", arrows = FALSE)
}
}
