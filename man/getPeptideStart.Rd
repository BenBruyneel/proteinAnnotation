% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteinInfo.R
\name{getPeptideStart}
\alias{getPeptideStart}
\title{getPeptideStart}
\usage{
getPeptideStart(
  peptideTable = NA,
  Accession = "",
  positionColumn,
  exact = TRUE,
  proteinSequence = NA,
  peptideSequence = NA,
  noWarnings = TRUE
)
}
\arguments{
\item{peptideTable}{data.frame having a.position column in the Proteome
Discoverer format (see \code{\link{getPositions}})}

\item{Accession}{character vector that specifies from which protein Accession to get the position}

\item{positionColumn}{character vector which specifies which column contains the peptide position information. Proteome Discoverer uses either
'PositionsinProteins' or 'PositionsinMasterProteins' (depending on the settings used in the consensus method)}

\item{exact}{logical vector which defines how the Accession argument is compared to the string argument.
Default is TRUE which means that the Accession needs to be exactly the same letters/numbers. If FALSE then
a 'grepl' statement is used with the Accession as a pattern}

\item{proteinSequence}{character vector representing the protein sequence to be search. Ignored if peptideTable is not NA}

\item{peptideSequence}{character vector representing the peptide sequence to search for. Regular Expressions can be used
(see examples). Ignored if peptideTable is not NA}

\item{noWarnings}{logical vector, default is TRUE: no warnings when a peptide sequence is present more than once in a protein sequence. If FALSE then
a warning will be generated. Ignored if peptideTable is not NA}
}
\value{
numeric vector
}
\description{
Helper function to get the start positions of amino acid sequences. The function
works with either a protein sequence and the peptide sequence to be searched
(regular expressions can be used) or a peptide table (data.frame) containing
position information in the format used by Proteome Discoverer. See also
\code{\link{getPositions}}
}
\examples{
# find all start positions for all peptides in the peptide table
getPeptideStart(peptideTable = OVATable("peptide"), Accession = "P01012",
 positionColumn = "PositionsinProteins")
# find all locations of a peptide sequence
getPeptideStart(proteinSequence = standardProtein(), peptideSequence = "DILNQITK")
# find all locations of a single amino acid
getPeptideStart(proteinSequence = standardProtein(), peptideSequence = "P", noWarnings = FALSE)
# find all tryptic sites, not taking into account Proline (P)
getPeptideStart(proteinSequence = standardProtein(), peptideSequence = "K|R")
getPeptideStart(proteinSequence = standardProtein("BSA"), peptideSequence = "K|R")
# find all tryptic sites w/o a preceding Proline (P)
getPeptideStart(proteinSequence = standardProtein(), peptideSequence = "(?<!P)R|(?<!P)K")
getPeptideStart(proteinSequence = standardProtein("BSA"), peptideSequence = "(?<!P)R|(?<!P)K")
}
