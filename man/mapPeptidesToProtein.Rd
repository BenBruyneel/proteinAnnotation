% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteinInfo.R
\name{mapPeptidesToProtein}
\alias{mapPeptidesToProtein}
\title{mapPeptidesToProtein}
\usage{
mapPeptidesToProtein(
  proteinDF,
  peptideTable,
  Accession,
  positionColumn,
  variable,
  dataName = variable,
  NAValue = 0L,
  combineFunction = sum,
  na.rm = TRUE
)
}
\arguments{
\item{proteinDF}{the protein data.frame to add the info to. Main requirements are that there is a column named
position, that there is no column named 'newData____' (internal use) and no column with the same name as defined
by the 'dataName' argument}

\item{peptideTable}{a data.frame with at least a position column (see 'positionColumn' argument) and a column with the same name as the 'variable' argument.
This is what Proteome Discoverer produces}

\item{Accession}{character vector that specifies from which protein Accession to get the position}

\item{positionColumn}{character vector which specifies which column contains the peptide position information. Proteome Discoverer uses either
'PositionsinProteins' or 'PositionsinMasterProteins' (depending on the settings used in the consensus method)}

\item{variable}{character vector: name of the column in the 'peptideTable' that needs to be mapped onto the protein data}

\item{dataName}{character vector: name of the new column in the protein data data.frame}

\item{NAValue}{vector to be used for positions where no peptide data maps to}

\item{combineFunction}{function (default is \code{\link{sum}} ) that is used for positions which have more than one peptide row mapping to it. In case of 'sum',
the values are summed for that position, for the function 'max' the maximum value is taken etc etc. Note: only basic functions min, max, sum and mean have been
tested}

\item{na.rm}{default is TRUE. If TRUE then 'na.rm=TRUE' is added to the 'combineFunction', If FALSE, then it is ignored}
}
\value{
a data.frame
}
\description{
takes a data.frame with peptide information (like a peptide table from Proteome Discoverer) and adds data from it to the proteinData
}
\examples{
newTable <- createProteinData(sequence = standardProtein("OVA"), start = 2, nterm = 1, )
newTable |> head()
newTable <- mapPeptidesToProtein(proteinDF = newTable, peptideTable = OVATable("peptide"),
 Accession = "P01012", positionColumn = "PositionsinProteins", variable = "Abundances_1",
 dataName = "SummedAbundances")
newTable |> head()
newTable <- mapPeptidesToProtein(proteinDF = newTable, peptideTable = OVATable("peptide"),
 Accession = "P01012", positionColumn = "PositionsinProteins", variable = "Abundances_1",
 dataName = "Abundances", combineFunction = NA)
newTable[35:45,]
newTable[100:125,]
}
